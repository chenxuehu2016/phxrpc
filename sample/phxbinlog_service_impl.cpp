/* phxbinlog_service_impl.cpp

 Generated by phxrpc_pb2service from phxbinlogsvr.proto

*/

#include "phxbinlog_service_impl.h"
#include "phxbinlog_server_config.h"
#include "phxbinlog_server_handler.h"
#include "phxbinlogsvr.pb.h"
#include "phxrpc/file.h"

PhxbinlogServiceImpl :: PhxbinlogServiceImpl( ServiceArgs_t & args )
    : args_( args ), svr_handler_( args.svr_handler_ )
{
}

PhxbinlogServiceImpl :: ~PhxbinlogServiceImpl()
{
}

int PhxbinlogServiceImpl :: PHXEcho( const google::protobuf::StringValue & req,
        google::protobuf::StringValue * resp )
{
    resp->set_value( req.value() );
    return 0;
}

int PhxbinlogServiceImpl :: SendBinLog( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->SendBinLog( req.value() );
}

int PhxbinlogServiceImpl :: GetMasterInfoFromGlobal( const google::protobuf::Empty & req,
        google::protobuf::BytesValue * resp )
{
    return svr_handler_->GetMasterInfoFromGlobal( resp->mutable_value() );
}

int PhxbinlogServiceImpl :: GetMasterInfoFromLocal( const google::protobuf::Empty & req,
        google::protobuf::BytesValue * resp )
{
    return svr_handler_->GetMasterInfoFromLocal( resp->mutable_value() );
}

int PhxbinlogServiceImpl :: GetLastSendGtidFromGlobal( const google::protobuf::BytesValue & req,
        google::protobuf::BytesValue * resp )
{
    return svr_handler_->GetLastSendGtidFromGlobal( req.value(),resp->mutable_value() );
}

int PhxbinlogServiceImpl :: GetLastSendGtidFromLocal( const google::protobuf::BytesValue & req,
        google::protobuf::BytesValue * resp )
{
    return svr_handler_->GetLastSendGtidFromLocal( req.value(),resp->mutable_value() );
}

int PhxbinlogServiceImpl :: SetExportIP( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->SetExportIP( req.value() );
}

int PhxbinlogServiceImpl :: HeartBeat( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->HeartBeat( req.value() );
}

int PhxbinlogServiceImpl :: AddMember( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->AddMember( req.value() );
}

int PhxbinlogServiceImpl :: RemoveMember( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->RemoveMember( req.value() );
}

int PhxbinlogServiceImpl :: SetMySqlAdminInfo( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->SetMySqlAdminInfo( req.value() );
}

int PhxbinlogServiceImpl :: SetMySqlReplicaInfo( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->SetMySqlReplicaInfo( req.value() );
}

int PhxbinlogServiceImpl :: GetMemberList( const google::protobuf::Empty & req,
        google::protobuf::BytesValue * resp )
{
    return svr_handler_->GetMemberList( resp->mutable_value() );
}

int PhxbinlogServiceImpl :: InitBinlogSvrMaster( const google::protobuf::BytesValue & req,
        google::protobuf::Empty * resp )
{
    return svr_handler_->InitBinlogSvrMaster( req.value() );
}


